# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.development
.env.test
.env.production
.env.staging
.env.prod
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the entire .idea directory.
.idea/

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Flask Application Specific
# Database files
*.db
*.sqlite
*.sqlite3
app.db
blog.db

# Log files
logs/
*.log
app.log
error.log
access.log
development.log
production.log

# Upload directories
static/uploads/*
!static/uploads/.gitkeep
uploads/
media/

# Instance folder (Flask configuration)
instance/
instance/*
!instance/.gitkeep

# Flask session files
flask_session/

# Migrations (keep the migrations folder but ignore auto-generated files)
migrations/versions/*.py
!migrations/versions/.gitkeep

# Cache directories
.cache/
__pycache__/
.pytest_cache/
.mypy_cache/

# Docker
.dockerignore
docker-compose.override.yml
.docker/

# SSL certificates and keys
*.pem
*.key
*.crt
*.cert
ssl/
certs/
docker/ssl/*
!docker/ssl/.gitkeep

# Backup files
*.bak
*.backup
*.sql.gz
backup_*.sql
*.dump

# Configuration files with sensitive data
config.py
local_config.py
production_config.py

# IDE and editor files
.vscode/
.idea/
*.sublime-project
*.sublime-workspace
.atom/
.brackets.json

# Node.js (if using any frontend build tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json
yarn.lock

# Sass/SCSS
.sass-cache/
*.css.map

# Temporary files
tmp/
temp/
.tmp/
.temp/

# OS generated files
.DS_Store?
Icon?
Thumbs.db
*.swp
*.swo

# Application specific
# Email templates cache
.email_cache/

# Search index files
whoosh_index/
search_index/

# Redis dump files
dump.rdb

# Celery beat schedule file
celerybeat-schedule.db

# Profiling data
.prof

# Coverage reports
htmlcov/
.coverage
coverage.xml

# Pytest
.pytest_cache/
test-results/

# Documentation build
docs/_build/
docs/build/

# Jupyter notebooks
.ipynb_checkpoints/

# Local development scripts
local_*.py
dev_*.py
test_*.py

# Security files
.secrets
secrets/
private_keys/

# Monitoring and metrics
metrics/
monitoring/

# Terraform (if used for infrastructure)
*.tfstate
*.tfstate.*
.terraform/

# Kubernetes (if used for deployment)
*.kubeconfig
k8s-secrets/

# Local development overrides
docker-compose.local.yml
docker-compose.dev.yml
local.env

# Application data
data/
storage/

# Compiled assets
static/dist/
static/build/

# Webpack (if used)
webpack-stats.json

# Local SQLite databases
*.sqlite3-journal
*.sqlite3-wal
*.sqlite3-shm