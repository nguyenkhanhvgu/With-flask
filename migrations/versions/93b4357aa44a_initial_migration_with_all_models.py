"""Initial migration with all models

Revision ID: 93b4357aa44a
Revises: 
Create Date: 2025-10-05 09:49:05.415051

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '93b4357aa44a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('permission',
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("name != ''", name='permission_name_not_empty'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_permission_name'), ['name'], unique=True)

    op.create_table('role',
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("name != ''", name='role_name_not_empty'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.create_index('idx_role_default_unique', ['is_default'], unique=False, postgresql_where=sa.text('is_default = true'))
        batch_op.create_index(batch_op.f('ix_role_is_default'), ['is_default'], unique=False)
        batch_op.create_index(batch_op.f('ix_role_name'), ['name'], unique=True)

    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    with op.batch_alter_table('role_permissions', schema=None) as batch_op:
        batch_op.create_index('idx_role_permissions_permission', ['permission_id'], unique=False)
        batch_op.create_index('idx_role_permissions_role', ['role_id'], unique=False)

    op.create_table('user',
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('avatar_filename', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('email_confirmed', sa.Boolean(), nullable=False),
    sa.Column('email_confirmation_token', sa.String(length=128), nullable=True),
    sa.Column('password_reset_token', sa.String(length=128), nullable=True),
    sa.Column('password_reset_expires', sa.DateTime(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=128), nullable=True),
    sa.Column('website', sa.String(length=256), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index('idx_user_active_last_seen', ['is_active', 'last_seen'], unique=False)
        batch_op.create_index('idx_user_active_users', ['username'], unique=False, postgresql_where=sa.text('is_active = true'))
        batch_op.create_index('idx_user_confirmed_users', ['email'], unique=False, postgresql_where=sa.text('email_confirmed = true'))
        batch_op.create_index('idx_user_email_confirmed', ['email_confirmed', 'is_active'], unique=False)
        batch_op.create_index('idx_user_role_active', ['role_id', 'is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_last_seen'), ['last_seen'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_role_id'), ['role_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('follow',
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('followed_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('follower_id != followed_id', name='no_self_follow'),
    sa.ForeignKeyConstraint(['followed_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('follower_id', 'followed_id', name='unique_follow_relationship')
    )
    with op.batch_alter_table('follow', schema=None) as batch_op:
        batch_op.create_index('idx_follow_followed_created', ['followed_id', 'created_at'], unique=False)
        batch_op.create_index('idx_follow_follower_created', ['follower_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_follow_followed_id'), ['followed_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_follow_follower_id'), ['follower_id'], unique=False)

    op.create_table('post',
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('image_filename', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment',
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_view',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('referer', sa.String(length=512), nullable=True),
    sa.Column('time_spent', sa.Integer(), nullable=True),
    sa.Column('scroll_depth', sa.Float(), nullable=True),
    sa.Column('session_id', sa.String(length=128), nullable=True),
    sa.Column('is_unique_view', sa.Boolean(), nullable=True),
    sa.Column('country_code', sa.String(length=2), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('device_type', sa.String(length=20), nullable=True),
    sa.Column('browser', sa.String(length=50), nullable=True),
    sa.Column('operating_system', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('post_view', schema=None) as batch_op:
        batch_op.create_index('idx_postview_country_created', ['country_code', 'created_at'], unique=False)
        batch_op.create_index('idx_postview_device_created', ['device_type', 'created_at'], unique=False)
        batch_op.create_index('idx_postview_post_created', ['post_id', 'created_at'], unique=False)
        batch_op.create_index('idx_postview_registered_users', ['user_id', 'post_id', 'created_at'], unique=False, postgresql_where=sa.text('user_id IS NOT NULL'))
        batch_op.create_index('idx_postview_session_post', ['session_id', 'post_id'], unique=False)
        batch_op.create_index('idx_postview_unique_created', ['is_unique_view', 'created_at'], unique=False)
        batch_op.create_index('idx_postview_unique_views', ['post_id', 'created_at'], unique=False, postgresql_where=sa.text('is_unique_view = true'))
        batch_op.create_index('idx_postview_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_view_ip_address'), ['ip_address'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_view_is_unique_view'), ['is_unique_view'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_view_post_id'), ['post_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_view_session_id'), ['session_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_view_user_id'), ['user_id'], unique=False)

    op.create_table('notification',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('related_post_id', sa.Integer(), nullable=True),
    sa.Column('related_comment_id', sa.Integer(), nullable=True),
    sa.Column('related_user_id', sa.Integer(), nullable=True),
    sa.Column('delivery_method', sa.String(length=20), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("delivery_method IN ('web', 'email', 'push', 'sms')", name='valid_delivery_method'),
    sa.CheckConstraint("priority IN ('low', 'normal', 'high', 'urgent')", name='valid_priority'),
    sa.ForeignKeyConstraint(['related_comment_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['related_post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['related_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.create_index('idx_notification_category_created', ['category', 'created_at'], unique=False)
        batch_op.create_index('idx_notification_expires', ['expires_at'], unique=False)
        batch_op.create_index('idx_notification_high_priority', ['user_id', 'created_at'], unique=False, postgresql_where=sa.text("priority IN ('high', 'urgent')"))
        batch_op.create_index('idx_notification_priority_created', ['priority', 'created_at'], unique=False)
        batch_op.create_index('idx_notification_type_created', ['notification_type', 'created_at'], unique=False)
        batch_op.create_index('idx_notification_unread', ['user_id', 'created_at'], unique=False, postgresql_where=sa.text('is_read = false'))
        batch_op.create_index('idx_notification_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index('idx_notification_user_read', ['user_id', 'is_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_expires_at'), ['expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_is_read'), ['is_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_notification_type'), ['notification_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_priority'), ['priority'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_user_id'))
        batch_op.drop_index(batch_op.f('ix_notification_priority'))
        batch_op.drop_index(batch_op.f('ix_notification_notification_type'))
        batch_op.drop_index(batch_op.f('ix_notification_is_read'))
        batch_op.drop_index(batch_op.f('ix_notification_expires_at'))
        batch_op.drop_index(batch_op.f('ix_notification_category'))
        batch_op.drop_index('idx_notification_user_read')
        batch_op.drop_index('idx_notification_user_created')
        batch_op.drop_index('idx_notification_unread', postgresql_where=sa.text('is_read = false'))
        batch_op.drop_index('idx_notification_type_created')
        batch_op.drop_index('idx_notification_priority_created')
        batch_op.drop_index('idx_notification_high_priority', postgresql_where=sa.text("priority IN ('high', 'urgent')"))
        batch_op.drop_index('idx_notification_expires')
        batch_op.drop_index('idx_notification_category_created')

    op.drop_table('notification')
    with op.batch_alter_table('post_view', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_post_view_user_id'))
        batch_op.drop_index(batch_op.f('ix_post_view_session_id'))
        batch_op.drop_index(batch_op.f('ix_post_view_post_id'))
        batch_op.drop_index(batch_op.f('ix_post_view_is_unique_view'))
        batch_op.drop_index(batch_op.f('ix_post_view_ip_address'))
        batch_op.drop_index('idx_postview_user_created')
        batch_op.drop_index('idx_postview_unique_views', postgresql_where=sa.text('is_unique_view = true'))
        batch_op.drop_index('idx_postview_unique_created')
        batch_op.drop_index('idx_postview_session_post')
        batch_op.drop_index('idx_postview_registered_users', postgresql_where=sa.text('user_id IS NOT NULL'))
        batch_op.drop_index('idx_postview_post_created')
        batch_op.drop_index('idx_postview_device_created')
        batch_op.drop_index('idx_postview_country_created')

    op.drop_table('post_view')
    op.drop_table('comment')
    op.drop_table('post')
    with op.batch_alter_table('follow', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_follow_follower_id'))
        batch_op.drop_index(batch_op.f('ix_follow_followed_id'))
        batch_op.drop_index('idx_follow_follower_created')
        batch_op.drop_index('idx_follow_followed_created')

    op.drop_table('follow')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_role_id'))
        batch_op.drop_index(batch_op.f('ix_user_last_seen'))
        batch_op.drop_index(batch_op.f('ix_user_is_active'))
        batch_op.drop_index(batch_op.f('ix_user_email'))
        batch_op.drop_index('idx_user_role_active')
        batch_op.drop_index('idx_user_email_confirmed')
        batch_op.drop_index('idx_user_confirmed_users', postgresql_where=sa.text('email_confirmed = true'))
        batch_op.drop_index('idx_user_active_users', postgresql_where=sa.text('is_active = true'))
        batch_op.drop_index('idx_user_active_last_seen')

    op.drop_table('user')
    with op.batch_alter_table('role_permissions', schema=None) as batch_op:
        batch_op.drop_index('idx_role_permissions_role')
        batch_op.drop_index('idx_role_permissions_permission')

    op.drop_table('role_permissions')
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_role_name'))
        batch_op.drop_index(batch_op.f('ix_role_is_default'))
        batch_op.drop_index('idx_role_default_unique', postgresql_where=sa.text('is_default = true'))

    op.drop_table('role')
    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_permission_name'))

    op.drop_table('permission')
    op.drop_table('category')
    # ### end Alembic commands ###
